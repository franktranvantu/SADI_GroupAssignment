spring.main.banner-mode=off
logging.level.org.springframework=ERROR

server.port=9000

spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
##########Master##############
spring.master.datasource.jdbcUrl=jdbc:postgresql://localhost:5433/spring_boot_kafka
spring.master.datasource.username=postgres
spring.master.datasource.password=postgres
##########Slave##############
spring.slave.datasource.jdbcUrl=jdbc:postgresql://localhost:5434/spring_boot_kafka
spring.slave.datasource.username=postgres
spring.slave.datasource.password=postgres

#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.format_sql=true

#spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Application configuration.
## Reader can change the server port configuration as per their configuration idea.

# Redis configuration.
## As we are running redis on docker we are setting up its configuration.
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.redis.time-to-live=300000

spring.cache.type=redis